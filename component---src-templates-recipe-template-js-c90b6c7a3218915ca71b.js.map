{"version":3,"sources":["webpack:///./src/templates/recipeTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","className","source","target","href","rel","related","to","dangerouslySetInnerHTML","__html","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Layout","Fragment","Helmet_default","titleTemplate","site","siteMetadata","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-templates-recipe-template-js-c90b6c7a3218915ca71b.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\n\nimport Helmet from 'react-helmet'\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <Helmet title={frontmatter.title} />\n      <div className=\"recipe-container\">\n        <div className=\"recipe\">\n          <h1>{frontmatter.title}</h1>\n          <div className=\"recipe-meta\">\n            {frontmatter.source && (\n              <a\n                target=\"_blank\"\n                href={frontmatter.source}\n                rel=\"noopener noreferrer\"\n              >\n                Website\n              </a>\n            )}\n            {frontmatter.related && (\n              <span>\n                | Related recipe:\n                <Link to={frontmatter.related}>{frontmatter.related}</Link>\n              </span>\n            )}\n          </div>\n          <div\n            className=\"recipe-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query RecipeQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        source\n        related\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 1200,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Header from './header'\nimport './layout.css'\nimport './recipes.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet titleTemplate={`%s | ${data.site.siteMetadata.title}`} />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 1200,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}