{"version":3,"sources":["webpack:///./src/templates/recipeTemplate.js"],"names":["Template","markdownRemark","data","frontmatter","html","fields","title","className","source","target","href","rel","serves","role","aria-label","relatedRecipes","length","map","r","key","slug","to","Recipe","text","ingredients","recipe","idx","lastIndexOf","substr","dangerouslySetInnerHTML","__html","classNAme","pageQuery"],"mappings":"2FAAA,+JAKe,SAASA,EAAT,GAA6B,IAClCC,EADiC,EAARC,KACzBD,eACAE,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAE3B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAOH,EAAYG,QAE3B,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,UACb,4BAAKJ,EAAYG,OACjB,yBAAKC,UAAU,eACZJ,EAAYK,QACX,uBACEC,OAAO,SACPC,KAAMP,EAAYK,OAClBG,IAAI,uBAHN,WAQDR,EAAYS,QACX,8BACG,MACD,0BAAMC,KAAK,MAAMC,aAAW,YAA5B,MAGCX,EAAYS,SAIlBP,EAAOU,gBACN,yBAAKR,UAAU,eACb,6CACiBF,EAAOU,eAAeC,OAAS,EAAI,IAAM,GAD1D,IAEGX,EAAOU,eAAeE,KAAI,SAAAC,GAAC,OAC1B,wBAAIC,IAAKD,EAAEE,MACT,kBAAC,OAAD,CAAMC,GAAIH,EAAEE,MAAOF,EAAEZ,aAM/B,kBAACgB,EAAD,CAAQC,KAAMnB,OAOxB,IAAMkB,EAAS,SAAC,GAAc,IAExBE,EAFYD,EAAW,EAAXA,KACZE,EAASF,EAIPG,EAAMH,EAAKI,YADD,SAOhB,OALID,GAAO,IACTF,EAAcD,EAAKK,OAAO,EAAGF,EAHf,QAG6BV,QAC3CS,EAASF,EAAKK,OAAOF,EAJP,QAIqBV,SAInC,yBAAKT,UAAU,kBACZiB,GACC,yBACEjB,UAAU,qBACVsB,wBAAyB,CAAEC,OAAQN,KAGvC,yBACEO,UAAU,cACVF,wBAAyB,CAAEC,OAAQL,OAM9BO,EAAS","file":"component---src-templates-recipe-template-js-6c4e91f98958d2ff2c9b.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\nimport Helmet from 'react-helmet'\n\nexport default function Template({ data }) {\n  const { markdownRemark } = data\n  const { frontmatter, html, fields } = markdownRemark\n\n  return (\n    <Layout>\n      <Helmet title={frontmatter.title} />\n\n      <div className=\"recipe-container\">\n        <div className=\"recipe\">\n          <h1>{frontmatter.title}</h1>\n          <div className=\"recipe-meta\">\n            {frontmatter.source && (\n              <a\n                target=\"_blank\"\n                href={frontmatter.source}\n                rel=\"noopener noreferrer\"\n              >\n                Website\n              </a>\n            )}\n            {frontmatter.serves && (\n              <span>\n                {' | '}\n                <span role=\"img\" aria-label=\"Servings\">\n                  ðŸ‘¤\n                </span>\n                {frontmatter.serves}\n              </span>\n            )}\n          </div>\n          {fields.relatedRecipes && (\n            <div className=\"recipe-meta\">\n              <ul>\n                Related recipe{fields.relatedRecipes.length > 1 ? 's' : ''}:\n                {fields.relatedRecipes.map(r => (\n                  <li key={r.slug}>\n                    <Link to={r.slug}>{r.title}</Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          <Recipe text={html} />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nconst Recipe = ({ text }) => {\n  let recipe = text\n  let ingredients\n  // Try to split by end of ingredient list\n  const splitBy = '</ul>'\n  const idx = text.lastIndexOf(splitBy)\n  if (idx > -1) {\n    ingredients = text.substr(0, idx + splitBy.length)\n    recipe = text.substr(idx + splitBy.length)\n  }\n\n  return (\n    <div className=\"recipe-content\">\n      {ingredients && (\n        <div\n          className=\"recipe-ingredients\"\n          dangerouslySetInnerHTML={{ __html: ingredients }}\n        />\n      )}\n      <div\n        classNAme=\"recipe-text\"\n        dangerouslySetInnerHTML={{ __html: recipe }}\n      />\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query RecipeQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        serves\n        source\n      }\n      fields {\n        relatedRecipes {\n          slug\n          title\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}