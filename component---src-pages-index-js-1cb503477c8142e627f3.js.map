{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Image","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_3772800626","IndexPage","_ref","_useState","useState","filter","setFilter","recipeGroups","pipe","filterBy","_ref2","node","frontmatter","title","toLowerCase","startsWith","groupBy","recipe","toPairs","sort","b","localeCompare","allMarkdownRemark","edges","layout","Helmet_default","className","onChange","e","currentTarget","value","placeholder","map","group","key","_ref3","to","fields","slug","image","components_image","listQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","Layout","titleTemplate","site","siteMetadata","header","paddingTop","_755544856"],"mappings":"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","file":"component---src-pages-index-js-1cb503477c8142e627f3.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 300) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n      )}\n    />\n  )\n}\nexport default Image\n","import React, { useState } from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Image from '../components/image'\n\nimport Img from 'gatsby-image'\nimport Helmet from 'react-helmet'\nimport { filter as filterBy, groupBy, toPairs, pipe, sort } from 'ramda'\n\nconst IndexPage = ({ data }) => {\n  const [filter, setFilter] = useState('')\n\n  const recipeGroups = pipe(\n    filterBy(({ node }) =>\n      node.frontmatter.title.toLowerCase().startsWith(filter.toLowerCase())\n    ),\n    groupBy(recipe => recipe.node.frontmatter.title[0]),\n    toPairs,\n    sort((a, b) => a[0].localeCompare(b[0]))\n  )(data.allMarkdownRemark.edges)\n\n  return (\n    <Layout>\n      <Helmet title=\"Home\" />\n      <div>\n        <input\n          className=\"recipe-filter\"\n          onChange={e => setFilter(e.currentTarget.value)}\n          placeholder=\"  🔍\"\n        />\n      </div>\n      <div className=\"recipe-list\">\n        {recipeGroups.map(group => (\n          <div className=\"recipe-group\" key={group[0]}>\n            <div className=\"recipe-group-heading\">{group[0]}</div>\n            <div className=\"recipe-group-content\">\n              {group[1].map(({ node }) => (\n                <Link\n                  to={node.fields.slug}\n                  className=\"link\"\n                  key={node.frontmatter.title}\n                >\n                  <div className=\"recipe\">\n                    {node.frontmatter.image ? (\n                      <Img\n                        fluid={node.frontmatter.image.childImageSharp.fluid}\n                      />\n                    ) : (\n                      <Image />\n                    )}\n                    <span>{node.frontmatter.title}</span>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const listQuery = graphql`\n  query ListQuery {\n    allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___title] }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            image {\n              childImageSharp {\n                fluid(maxHeight: 180, maxWidth: 180) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 1300,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Header from './header'\nimport './layout.css'\nimport './recipes.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet titleTemplate={`%s | ${data.site.siteMetadata.title}`} />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 1300,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}