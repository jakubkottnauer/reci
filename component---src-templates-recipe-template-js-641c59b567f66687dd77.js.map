{"version":3,"sources":["webpack:///./src/templates/recipeTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","_ref","markdownRemark","data","frontmatter","html","fields","a","createElement","title","className","source","target","href","rel","serves","relatedRecipes","map","key","slug","to","dangerouslySetInnerHTML","__html","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Layout","Helmet_default","titleTemplate","site","siteMetadata","header","paddingTop","_755544856"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAAQ,EAAAG,GAMe,SAASP,EAATS,GAEZ,IACOC,EADPD,EADDE,KAEQD,eACAE,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAC3B,OACEX,EAAAY,EAAAC,cAACV,EAAA,EAAD,KACEH,EAAAY,EAAAC,cAACR,EAAAO,EAAD,CAAQE,MAAOL,EAAYK,QAC3Bd,EAAAY,EAAAC,cAAA,OAAKE,UAAU,oBACbf,EAAAY,EAAAC,cAAA,OAAKE,UAAU,UACbf,EAAAY,EAAAC,cAAA,UAAKJ,EAAYK,OACjBd,EAAAY,EAAAC,cAAA,OAAKE,UAAU,eACZN,EAAYO,QACXhB,EAAAY,EAAAC,cAAA,KACEI,OAAO,SACPC,KAAMT,EAAYO,OAClBG,IAAI,uBAHN,WAQDV,EAAYW,QAAUpB,EAAAY,EAAAC,cAAA,0BAAkBJ,EAAYW,SAEtDT,EAAOU,gBACNV,EAAOU,eAAeC,IAAI,SAAA5B,GAAC,OACzBM,EAAAY,EAAAC,cAAA,OAAKE,UAAU,cAAcQ,IAAK7B,EAAE8B,MAApC,mBACkBxB,EAAAY,EAAAC,cAACX,EAAA,EAAD,CAAMuB,GAAI/B,EAAE8B,MAAO9B,EAAEoB,UAG3Cd,EAAAY,EAAAC,cAAA,OACEE,UAAU,iBACVW,wBAAyB,CAAEC,OAAQjB,QAQxC,IAAMZ,EAAS,+CC7CtBL,EAAAG,EAAAD,EAAA,sBAAAiC,IAAA,IAAA7B,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAA8B,EAAApC,EAAA,IAAAqC,EAAArC,EAAAQ,EAAA4B,GAAApC,EAAAG,EAAAD,EAAA,sBAAAmC,EAAAlB,IAAAnB,EAAA,KAAAA,EAAA,GAcyBsC,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT9B,GAA2E,IAAxC+B,EAAwC/B,EAAxC+B,gBAAiB7B,EAAuBF,EAAvBE,KAAM8B,EAAiBhC,EAAjBgC,MAAOC,EAAUjC,EAAViC,OACzDC,EAAYhC,EACdA,EAAKA,KACL6B,EAAgBC,IAAUD,EAAgBC,GAAO9B,KAErD,OACER,EAAAY,EAAAC,cAACb,EAAAY,EAAM6B,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAaxC,EAAAY,EAAAC,cAAA,qCAKrB,IAAMe,EAAc,SAAAc,GAAS,IACnBlC,EAAkCkC,EAAlClC,KAAM8B,EAA4BI,EAA5BJ,MAAOC,EAAqBG,EAArBH,OAAQI,EAAaD,EAAbC,SAE7B,OACE3C,EAAAY,EAAAC,cAACoB,EAAmBW,SAApB,KACG,SAAAP,GAAe,OACdrC,EAAAY,EAAAC,cAACuB,EAAD,CACE5B,KAAMA,EACN8B,MAAOA,EACPC,OAAQA,GAAUI,EAClBN,gBAAiBA,4BCzC3B,IAAsBQ,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6ECsBhCK,UAjBU,SAAA5C,GAAiC,IAA9B6C,EAA8B7C,EAA9B6C,SAAUC,EAAoB9C,EAApB8C,cACpC,OAAKA,EAGElB,IAAMrB,cAAcwC,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,0KCHLC,EAAS,SAAAnD,GAAA,IAAGoD,EAAHpD,EAAGoD,UAAH,OACbC,EAAA/C,EAAAC,cAAA,UACE+C,MAAO,CACLC,WAAU,gBACVC,aAAY,YAGdH,EAAA/C,EAAAC,cAAA,OACE+C,MAAO,CACLG,OAAM,SACNC,SAAU,KACVC,QAAO,sBAGTN,EAAA/C,EAAAC,cAAA,MAAI+C,MAAO,CAAEG,OAAQ,IACnBJ,EAAA/C,EAAAC,cAACqD,EAAA,EAAD,CACEzC,GAAG,IACHmC,MAAO,CACLO,MAAK,QACLC,eAAc,SAGfV,OAWXD,EAAOY,aAAe,CACpBX,UAAS,IAGID,sBCEAa,IAlCA,SAAAhE,GAAA,IAAGqC,EAAHrC,EAAGqC,SAAH,OACbgB,EAAA/C,EAAAC,cAACqD,EAAA,EAAD,CACE5B,MAAK,YASLC,OAAQ,SAAA/B,GAAI,OACVmD,EAAA/C,EAAAC,cAAA8C,EAAA/C,EAAA6B,SAAA,KACEkB,EAAA/C,EAAAC,cAAC0D,EAAA3D,EAAD,CAAQ4D,cAAa,QAAUhE,EAAKiE,KAAKC,aAAa5D,QACtD6C,EAAA/C,EAAAC,cAAC8D,EAAD,CAAQjB,UAAWlD,EAAKiE,KAAKC,aAAa5D,QAC1C6C,EAAA/C,EAAAC,cAAA,OACE+C,MAAO,CACLG,OAAQ,SACRC,SAAU,KACVC,QAAS,wBACTW,WAAY,IAGdjB,EAAA/C,EAAAC,cAAA,YAAO8B,MAtBfnC,KAAAqE","file":"component---src-templates-recipe-template-js-641c59b567f66687dd77.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout'\n\nimport Helmet from 'react-helmet'\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html, fields } = markdownRemark\n  return (\n    <Layout>\n      <Helmet title={frontmatter.title} />\n      <div className=\"recipe-container\">\n        <div className=\"recipe\">\n          <h1>{frontmatter.title}</h1>\n          <div className=\"recipe-meta\">\n            {frontmatter.source && (\n              <a\n                target=\"_blank\"\n                href={frontmatter.source}\n                rel=\"noopener noreferrer\"\n              >\n                Website\n              </a>\n            )}\n            {frontmatter.serves && <span> | Serves: {frontmatter.serves}</span>}\n          </div>\n          {fields.relatedRecipes &&\n            fields.relatedRecipes.map(r => (\n              <div className=\"recipe-meta\" key={r.slug}>\n                Related recipe: <Link to={r.slug}>{r.title}</Link>\n              </div>\n            ))}\n          <div\n            className=\"recipe-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query RecipeQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        serves\n        source\n      }\n      fields {\n        relatedRecipes {\n          slug\n          title\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 1300,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Header from './header'\nimport './layout.css'\nimport './recipes.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet titleTemplate={`%s | ${data.site.siteMetadata.title}`} />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 1300,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}